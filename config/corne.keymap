/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <../boards/shields/corne/boards/nice_nano.overlay>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |       |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |       |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |       |  N  |  M   |  ,  |  .  |  -  | SHFT(RET) |
            //                    | WIN | LWR | SPA |       | RTN | RSE  | ALT |

            bindings = <
&kp LCTRL  &kp Q  &kp W  &kp E             &kp R         &kp T        &kp Y    &kp U          &kp I         &kp O    &kp P      &tog 1
&kp ENTER  &kp A  &kp S  &kp D             &kp F         &kp G        &kp H    &kp J          &kp K         &kp L    &kp SEMI   &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C             &kp V         &kp B        &kp N    &kp M          &kp COMMA     &kp DOT  &kp SLASH  &tog 0
                         &mt LEFT_ALT TAB  &lt 2 ESCAPE  &kp SPACE    &kp RET  &kp BACKSPACE  &lt 3 DELETE
            >;
        };

        lower_layer {
            // ----------------------------------------------------------------------------------
            // |  ESC |  1   |  2  |  3   |  4     |  5  |          |  6  |  7  |  8  |  9  |  0   |    DEL   |
            // |  CAPS|      |     |      |        |     |          | HOME| PGUP|  UP |PGDN |  ?   |     ^    |
            // | SHFT | UNDO | CUT | COPY | PASTE| |     |          | END | LFT | DWN | RGT | PRSC | SHFT(RET)|
            //                              |     |     |          | RET | ADJ |    |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS  &kp N7        &kp N8        &kp N9        &kp KP_SLASH  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PLUS   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ASTERISK  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DOT    &trans
                        &trans  &trans  &trans    &trans     &trans        &kp N0
            >;
        };

        // -----------------------------------------------------------------------------------------
        // |  ESC |  !  |  @  |  #  |  $  |  %  |   |  &  |  /  |  (  |  )  |  =  | DEL |
        // | CTRL |   ? |     |     |     |     |   |  -  |  *  |  [  |  ]  |  \  |  `   |
        // | <    |   > |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
        //                    | GUI | LWR | SPC |   | ENT | RSE | ALT |

        raise_layer {
            bindings = <
&trans    &kp PAGE_UP    &kp BACKSPACE  &kp UP_ARROW  &kp DELETE  &kp C_VOLUME_UP      &kp MINUS  &kp N7        &kp N8        &kp N9        &kp KP_DIVIDE  &trans
&trans    &kp PAGE_DOWN  &kp LEFT       &kp DOWN      &kp RIGHT   &kp C_VOLUME_DOWN    &kp PLUS   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ASTERISK   &trans
&kp CAPS  &kp LG(D)      &kp LG(L)      &kp LG(E)     &kp LG(V)   &kp C_MUTE           &kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DOT     &trans
                                        &trans        &trans      &trans               &trans     &trans        &kp N0
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // |  F1      |  F2      |  F3      | F4       |    F5   |  F6     |   |    F7   |   F8  |    F9   |   F10 |   F11 | F12    |
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |  BL_TOG | RGB TOG |   |    BT1  |   BT2 |   BT3   |   BT4 |   BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |         |  EP_TOG |   |    USB  |   BLE |K_SLEEP  |       |       |  RESET |
            //                                              |     |     |     |     |     |

            bindings = <
&kp F1           &kp F2           &kp F3           &kp F4           &kp F5  &kp F6               &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
&rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &none   &rgb_ug RGB_TOG      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &none   &ext_power EP_TOG    &out OUT_USB  &out OUT_BLE  &kp K_SLEEP   &none         &none         &none
                                                   &trans           &trans  &trans               &trans        &trans        &trans
            >;
        };
    };
};
